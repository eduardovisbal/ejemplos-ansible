---
- name: Instalando Paquetes
  yum:
    name: "{{ item }}"
    state: present
  with_items:
    - "{{ mariadb_packages }}"
    - "{{ apache_packages }}"

- name: Configurando LOG MySQL
  file:
    path: "/var/log/mysqld.log"
    mode: "0644"
    owner: "mysql"
    group: "mysql"
    state: "touch"

- name: Iniciando el servicio mysqld
  service:
    name: "{{ mariadb_service }}"
    state: started
    enabled: true

- name: Actualizando el password de root en localhost
  mysql_user:
    name: root
    host: "localhost"
    password: "{{ mysql_root_password }}"
    state: present
    check_implicit_admin: "yes"
    login_user: "root"
    login_host: "localhost"
    login_password: "{{ mysql_root_password }}"
  when: ansible_hostname != 'localhost'  

- name: Actualizando el password de root rn todos
  mysql_user:
    name: root
    host: "{{ item }}"
    password: "{{ mysql_root_password }}"
    state: present
    login_user: "root"
    login_host: "localhost"
    login_password: "{{ mysql_root_password }}"
  with_items:
    - "::1"
    - "127.0.0.1"
    - "{{ ansible_fqdn }}"
    - "{{ ansible_hostname }}"
  when: ansible_hostname != 'localhost' 

- name: Eliminando usuarios anonymous
  mysql_user:
    name: ""
    host: "{{ item }}"
    state: absent
    login_user: "root"
    login_password: "{{ mysql_root_password }}"
  with_items:
    - "localhost"
    - "{{ ansible_fqdn }}"
    - "{{ ansible_hostname }}"

- name: Eliminando contrase√±a root vacia
  mysql_user:
    name: "root"
    host: ""
    state: absent
    login_user: "root"
    login_password: "{{ mysql_root_password }}"

- name: Eliminando la BD Test 
  mysql_db: 
    name: test
    state: absent
    login_user: "root"
    login_password: "{{ mysql_root_password }}"

- name: Detener servicio de BD
  service: 
    name: "{{ mariadb_service }}"
    state: "stopped"

- name: Listar logfile
  shell: ls -l /var/lib/mysql/ib_logfile?
  register: logfiles
  changed_when: false

- name: Eliminar logfile
  file: 
    path: "{{ item }}"
    state: absent
    force: yes
  with_items:
    - "{{ logfiles.stdout_lines }}"

- name: Iniciar Servicio BD    
  service: 
    name: "{{ mariadb_service }}"
    state: "started"
    enabled: true

- name: Creacion BD para WordPress    
  mysql_db: 
    name: "{{ item }}"
    state: present
    login_user: "root"
    login_password: "{{ mysql_root_password }}"
  with_items:
    - "{{ db_wordpress_name }}"

- name: Crear usuario de BD para WordPress
  mysql_user:
    name: "{{ db_wordpress_username }}"
    password: "{{ db_wordpress_password }}"
    priv: "{{ item.db }}.*:{{ item.privs }}" 
    append_privs: yes
    state: present
    login_user: "root"
    login_password: "{{ mysql_root_password }}"
  with_items:
    - db: "{{ db_wordpress_name }}"
      privs: 'ALL'
        
#- name: Habilitar el FW para Apache
#  firewalld:
#    service: http
#    permanent: true
#    immediate: true
#    state: enabled
    
- name: Descargando WordPress
  get_url:
    url: https://wordpress.org/wordpress-5.0.11.tar.gz
    dest: "/tmp/wordpress-{{ wordpress_version }}.tar.gz"
    validate_certs: false

- name: Descomprimir WordPress
  unarchive:
    src: "/tmp/wordpress-{{ wordpress_version }}.tar.gz"
    dest: "/tmp"
    copy: no

- name: Copiar directorio Wordpress a {{ wordpress_install_dir }}
  shell: "cp -a /tmp/wordpress/* {{ wordpress_install_dir }}"

- name: Crear directorio uploads
  file: 
    path: "{{ wordpress_install_dir }}/wp-content/uploads"
    state: directory

- name: Eliminar archivo sample    
  file: 
    path: "{{ wordpress_install_dir }}/wp-config-sample.php"
    state: absent
    
- name: Permisos al directorio WordPress
  shell: chown -R apache:apache {{ wordpress_install_dir }}

- name: Copiar el archivo de configuracion de php
  template:
    src: wp-config.php.j2
    dest: "{{ wordpress_install_dir }}/wp-config.php"

#- name: Restaurar contexto SElinux
#  shell: "restorecon -R {{ wordpress_install_dir }}"

- name: Iniciar y habilitar HTTPD
  service:
    name: httpd
    state: started
    enabled: true

...
